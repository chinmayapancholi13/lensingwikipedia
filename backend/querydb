#!/usr/bin/env python2

"""
Usage: %s [opts] WHOOSH-INDEX-FINE [QUERY-FILE]

Arguments:
WHOOSH-INDEX-DIR  Directory of the Whoosh index.
QUERY-FILE        File to read the query from. Standard input is used if not
  given.

Options:
-r REPS   Repeat query a given number of times.
-a INTS   List of all predicate argument numbers. Comma separated.
-p        Prime the caches as the backend would.

Runs a query from standard input or a file directly against the index files.
Doesn't need the backend, but should produce the same result that the
backend would produce (with some settings at defaults).
"""

import sys
import json
import queries
import whoosh, whoosh.index

if __name__ == '__main__':
  import getopt

  try:
    opts, args = getopt.getopt(sys.argv[1:], "a:pr:")
    if len(args) not in [1, 2]:
      raise getopt.GetoptError("wrong number of positional arguments")
    opts = dict(opts)
  except getopt.GetoptError:
    print >> sys.stderr, __doc__.strip('\n\r') % (sys.argv[0])
    sys.exit(1)

  index_dir_path = args[0]
  all_arg_nums = [int(an) for an in opts['-a'].split(',')] if '-a' in opts else None
  do_priming = '-p' in opts
  reps = int(opts['-r']) if '-r' in opts else 1

  index = whoosh.index.open_dir(index_dir_path)
  input = open(args[1]) if len(args) > 1 else sys.stdin
  query = json.load(input)
  input.close()

  opts = { 'whoosh_index': index }
  if all_arg_nums is not None:
    opts['all_argument_numbers'] = all_arg_nums
  querier = queries.Querier(**opts)
  if do_priming:
    querier.prime()

  for i in range(reps):
    if reps > 1:
      print >> sys.stderr, "repetition %i" % (i + 1)
    response = querier.handle(query)
    json.dump(response, sys.stdout, sort_keys=True, indent=4)
