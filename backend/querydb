#!/usr/bin/env python2

"""
Usage: %s [opts] WHOOSH-INDEX-FINE [QUERY-FILE]

Arguments:
WHOOSH-INDEX-DIR  Directory of the Whoosh index.
QUERY-FILE        File to read the query from. Standard input is used if not
  given.

Options:
-c FILE   Config file to load settings from. All query handling settings are
  left at defaults if this option is not given.
-r REPS   Repeat query a given number of times.
-p        Prime the caches as the backend would.

Runs a query from standard input or a file directly against the index files.
Doesn't need the backend, but should produce the same result that the
backend would produce.
"""

import sys
import json
import queries
import whoosh, whoosh.index
import settings

if __name__ == '__main__':
  import getopt

  try:
    opts, args = getopt.getopt(sys.argv[1:], "c:pr:")
    if len(args) not in [1, 2]:
      raise getopt.GetoptError("wrong number of positional arguments")
    opts = dict(opts)
  except getopt.GetoptError:
    print >> sys.stderr, __doc__.strip('\n\r') % (sys.argv[0])
    sys.exit(1)

  whoosh_index_dir_path = args[0]
  config_file_path = opts['-c'] if '-c' in opts else None
  do_priming = '-p' in opts
  reps = int(opts['-r']) if '-r' in opts else 1

  whoosh_index = whoosh.index.open_dir(whoosh_index_dir_path)
  input = open(args[1]) if len(args) > 1 else sys.stdin
  query = json.load(input)
  input.close()

  backend_settings = settings.read_from_file(config_file_path) if config_file_path is not None else {}
  querier = queries.Querier(whoosh_index, **(backend_settings.get('querier') or {}))
  if do_priming:
    querier.prime()

  for i in range(reps):
    if reps > 1:
      print >> sys.stderr, "repetition %i" % (i + 1)
    response = querier.handle(query)
    json.dump(response, sys.stdout, sort_keys=True, indent=4)
