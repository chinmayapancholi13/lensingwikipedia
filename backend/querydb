#!/usr/bin/env python2

"""
Usage: %s [opts] DATA-DOMAIN [QUERY-FILE]

Arguments:
DATA-DOMAIN     SimpleDB domain containing the data.
QUERY-FILE      File to read the query from. Standard input is used if not
  given.

Options:
-a INTS   List of all predicate argument numbers. Comma separated.

Runs a query from standard input or a file directly against the database.
Doesn't need the backend, but should produce the same result that the
backend would produce (with some settings at defaults).
"""

import sys
import json
import boto
import sdbutils
import queries

if __name__ == '__main__':
  import getopt

  try:
    opts, args = getopt.getopt(sys.argv[1:], "")
    if len(args) not in [1, 2]:
      raise getopt.GetoptError("wrong number of positional arguments")
    opts = dict(opts)
  except getopt.GetoptError:
    print >> sys.stderr, __doc__.strip('\n\r') % (sys.argv[0])
    sys.exit(1)

  data_dom_name = args[0]
  all_arg_nums = [int(an) for an in opts['-a'].split(',')] if '-a' in opts else None

  if all_arg_nums is not None:
    queries.all_argument_numbers = all_arg_nums

  sdb = boto.connect_sdb()
  input = open(args[1]) if len(args) > 1 else sys.stdin
  query = json.load(input)
  input.close()

  querier = queries.Querier(
    data_dom = sdbutils.get_maybenew_domain(sdb, data_dom_name, make_new=False),
    all_argument_numbers = all_arg_nums
  )

  response = querier.handle(query)
  json.dump(response, sys.stdout, sort_keys=True, indent=4)
